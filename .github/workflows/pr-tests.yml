name: PR JSON Check

on:
  pull_request:
    branches: [ main ] 
    types: [opened, reopened, synchronize]

jobs:
  dashboard-tests:
    runs-on: ubuntu-latest
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Check for any changed JSON files
        id: check-json-files
        run: |
            echo "Finding changed files for PR #${{ github.event.pull_request.number }}"

            # Get the raw multi-line output from the gh command
            changed_files_multiline=$(gh pr diff ${{ github.event.pull_request.number }} --name-only | grep '\.json$' || true)

            # Convert the multi-line list into a single-line, space-separated string.
            changed_files_single_line=$(echo $changed_files_multiline)

            echo "The following files will be checked: $changed_files_single_line"

            # Set the output as a single line
            echo "json_files=$changed_files_single_line" >> $GITHUB_OUTPUT

      - name: Check for email address in JSON files
        if: steps.check-json-files.outputs.json_files != ''
        run: |
            json_files=$(echo ${{ steps.check-json-files.outputs.json_files }})

            for file in $json_files; do
                echo "---"
                echo "Checking file: $file for 'email addresses'"

                if jq -e '(any(.. | .creator_mail?; type == "string" and . != "")) | not' "$file"; then
                    echo "✅ No email addresses in $file were detected."
                else
                    echo "❌ A non-empty string value was detected in a creator_mail key in $file"
                    echo "Refer to the Contributing Guidelines here: https://github.com/PaloAltoNetworks/cortex-dashboards/blob/main/CONTRIBUTING.md#format-dashboard-json"
                    exit 1
                fi
            done

      - name: Check for tenant URL in JSON files
        if: steps.check-json-files.outputs.json_files != ''
        run: |
            json_files=$(echo ${{ steps.check-json-files.outputs.json_files }})

            for file in $json_files; do
                echo "---"
                echo "Checking file: $file for tenant URL"

                if jq -e '([.. | .url? | select(contains("paloaltonetworks.com")?)] | length) == 0' "$file"; then
                    echo "✅ All URLs in $file are valid."
                else
                    echo "❌ A URL was found in $file that appears to be a tenant URL."
                    echo "Refer to the Contributing Guidelines here: https://github.com/PaloAltoNetworks/cortex-dashboards/blob/main/CONTRIBUTING.md#format-dashboard-json"
                    exit 1
                fi
            done

      - name: Check for placeholder.com URL in JSON files
        if: steps.check-json-files.outputs.json_files != ''
        run: |
            json_files=$(echo ${{ steps.check-json-files.outputs.json_files }})

            for file in $json_files; do
                echo "---"
                echo "Checking file: $file for 'placeholder.com' URL"

                if jq -e '([.. | .url? | select(. != null and (startswith("https://placeholder.com") | not))] | length) == 0' "$file"; then
                    echo "✅ All URLs in $file are valid."
                else
                    echo "❌ An invalid URL (that does not contain 'placeholder.com') was found in $file."
                    echo "Refer to the Contributing Guidelines here: https://github.com/PaloAltoNetworks/cortex-dashboards/blob/main/CONTRIBUTING.md#format-dashboard-json"
                    exit 1
                fi
            done

      - name: Check for description in widgets and dashboard in JSON files
        if: steps.check-json-files.outputs.json_files != ''
        run: |
            json_files=$(echo ${{ steps.check-json-files.outputs.json_files }})

            for file in $json_files; do
                echo "---"
                echo "Checking file: $file for 'description'"
                if jq -e '(any(.. | .description?; type == "string" and . == "")) | not' "$file"; then
                    echo "✅ All descriptions in $file are valid."
                else
                    echo "❌ A description in $file is missing or empty."
                    echo "Refer to the Contributing Guidelines here: https://github.com/PaloAltoNetworks/cortex-dashboards/blob/main/CONTRIBUTING.md#widget-documentation"
                    exit 1    
                fi
            done

  spellcheck:
    needs: [dashboard-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: matheus23/md-spellcheck-action@v4.2.2
        with:
          files-to-check: "**.md"
          words-to-ignore-file: "config/spellcheck-ignore.txt"
